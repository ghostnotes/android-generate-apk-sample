import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def APK_PROPERTIES_FILE_NAME = "../apk.properties"
def apkProperties = new Properties()
apkProperties.load(new FileInputStream(file("$APK_PROPERTIES_FILE_NAME")))

android {
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            def buildTypeName = variant.buildType.name
            def versionName = defaultConfig.versionName
            def versionCode = defaultConfig.versionCode
            def date = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())

            variant.outputs.all { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    outputFileName = "test_${buildTypeName}_${versionName}_${versionCode}_${date}.apk"
                }
            }
        }
    }

    signingConfigs {
        release {
            storeFile file(apkProperties['storeFile'])
            storePassword apkProperties['storePassword']
            keyAlias apkProperties['keyAlias']
            keyPassword apkProperties['keyPassword']
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "co.ghostnotes.sample.generateapk"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task copyApk(type: Copy) {
    def projectDir = getProjectDir().absolutePath
    def filePath = "${projectDir}/build/outputs/apk"

    from filePath
    into apkProperties['copyApkToDir']
    include '**/*.apk'
}
